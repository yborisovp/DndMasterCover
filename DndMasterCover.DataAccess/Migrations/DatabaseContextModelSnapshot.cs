// <auto-generated />
using DndMasterCover.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DndMasterCover.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dnd")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DndMasterCover.DataAccess.Models.Enemy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("class");

                    b.Property<float>("DangerLevel")
                        .HasColumnType("real")
                        .HasColumnName("danger_level");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("character varying(3000)")
                        .HasColumnName("description");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("external_id");

                    b.Property<int>("Hp")
                        .HasColumnType("integer")
                        .HasColumnName("hp");

                    b.Property<int?>("MaxHp")
                        .HasColumnType("integer")
                        .HasColumnName("max_hp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_enemies");

                    b.ToTable("enemies", "dnd");
                });

            modelBuilder.Entity("DndMasterCover.DataAccess.Models.EnemySearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Danger")
                        .HasColumnType("real")
                        .HasColumnName("danger");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_enemy_searches");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_enemy_searches_name")
                        .HasAnnotation("Npgsql:TsVectorConfig", "russian");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Name"), "GIN");

                    b.ToTable("enemy_searches", "dnd");
                });

            modelBuilder.Entity("DndMasterCover.DataAccess.Models.Enemy", b =>
                {
                    b.OwnsMany("DndMasterCover.DataAccess.Models.Ability", "Abilities", b1 =>
                        {
                            b1.Property<int>("EnemyId")
                                .HasColumnType("integer");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("AttackDiceRoll")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("DamageType")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("HitDiceRoll")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("WeaponType")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("EnemyId", "__synthesizedOrdinal");

                            b1.ToTable("enemies", "dnd");

                            b1.ToJson("abilities");

                            b1.WithOwner()
                                .HasForeignKey("EnemyId")
                                .HasConstraintName("fk_enemies_enemies_enemy_id");
                        });

                    b.Navigation("Abilities");
                });
#pragma warning restore 612, 618
        }
    }
}
